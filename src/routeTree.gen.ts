/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileNotificationsImport } from './routes/profileNotifications'
import { Route as ProfileSettingsImport } from './routes/profile-settings'
import { Route as MyCampaignsImport } from './routes/my-campaigns'
import { Route as HistoryImport } from './routes/history'
import { Route as FavoritesImport } from './routes/favorites'
import { Route as ExpoloreMapImport } from './routes/expolore-map'
import { Route as ExploreMapImport } from './routes/explore-map'
import { Route as ExploreImport } from './routes/explore'
import { Route as CampaingThirdStepImport } from './routes/campaing-third-step'
import { Route as CampaingSecondStepImport } from './routes/campaing-second-step'
import { Route as CampaingCreateImport } from './routes/campaing-create'
import { Route as AboutImport } from './routes/about'
import { Route as CampaignsImport } from './routes/Campaigns'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ProfileNotificationsRoute = ProfileNotificationsImport.update({
  path: '/profileNotifications',
  getParentRoute: () => rootRoute,
} as any)

const ProfileSettingsRoute = ProfileSettingsImport.update({
  path: '/profile-settings',
  getParentRoute: () => rootRoute,
} as any)

const MyCampaignsRoute = MyCampaignsImport.update({
  path: '/my-campaigns',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesRoute = FavoritesImport.update({
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const ExpoloreMapRoute = ExpoloreMapImport.update({
  path: '/expolore-map',
  getParentRoute: () => rootRoute,
} as any)

const ExploreMapRoute = ExploreMapImport.update({
  path: '/explore-map',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRoute = ExploreImport.update({
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const CampaingThirdStepRoute = CampaingThirdStepImport.update({
  path: '/campaing-third-step',
  getParentRoute: () => rootRoute,
} as any)

const CampaingSecondStepRoute = CampaingSecondStepImport.update({
  path: '/campaing-second-step',
  getParentRoute: () => rootRoute,
} as any)

const CampaingCreateRoute = CampaingCreateImport.update({
  path: '/campaing-create',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const CampaignsRoute = CampaignsImport.update({
  path: '/Campaigns',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/Campaigns': {
      id: '/Campaigns'
      path: '/Campaigns'
      fullPath: '/Campaigns'
      preLoaderRoute: typeof CampaignsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/campaing-create': {
      id: '/campaing-create'
      path: '/campaing-create'
      fullPath: '/campaing-create'
      preLoaderRoute: typeof CampaingCreateImport
      parentRoute: typeof rootRoute
    }
    '/campaing-second-step': {
      id: '/campaing-second-step'
      path: '/campaing-second-step'
      fullPath: '/campaing-second-step'
      preLoaderRoute: typeof CampaingSecondStepImport
      parentRoute: typeof rootRoute
    }
    '/campaing-third-step': {
      id: '/campaing-third-step'
      path: '/campaing-third-step'
      fullPath: '/campaing-third-step'
      preLoaderRoute: typeof CampaingThirdStepImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreImport
      parentRoute: typeof rootRoute
    }
    '/explore-map': {
      id: '/explore-map'
      path: '/explore-map'
      fullPath: '/explore-map'
      preLoaderRoute: typeof ExploreMapImport
      parentRoute: typeof rootRoute
    }
    '/expolore-map': {
      id: '/expolore-map'
      path: '/expolore-map'
      fullPath: '/expolore-map'
      preLoaderRoute: typeof ExpoloreMapImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/my-campaigns': {
      id: '/my-campaigns'
      path: '/my-campaigns'
      fullPath: '/my-campaigns'
      preLoaderRoute: typeof MyCampaignsImport
      parentRoute: typeof rootRoute
    }
    '/profile-settings': {
      id: '/profile-settings'
      path: '/profile-settings'
      fullPath: '/profile-settings'
      preLoaderRoute: typeof ProfileSettingsImport
      parentRoute: typeof rootRoute
    }
    '/profileNotifications': {
      id: '/profileNotifications'
      path: '/profileNotifications'
      fullPath: '/profileNotifications'
      preLoaderRoute: typeof ProfileNotificationsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  CampaignsRoute,
  AboutRoute,
  CampaingCreateRoute,
  CampaingSecondStepRoute,
  CampaingThirdStepRoute,
  ExploreRoute,
  ExploreMapRoute,
  ExpoloreMapRoute,
  FavoritesRoute,
  HistoryRoute,
  MyCampaignsRoute,
  ProfileSettingsRoute,
  ProfileNotificationsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/Campaigns",
        "/about",
        "/campaing-create",
        "/campaing-second-step",
        "/campaing-third-step",
        "/explore",
        "/explore-map",
        "/expolore-map",
        "/favorites",
        "/history",
        "/my-campaigns",
        "/profile-settings",
        "/profileNotifications"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/Campaigns": {
      "filePath": "Campaigns.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/campaing-create": {
      "filePath": "campaing-create.tsx"
    },
    "/campaing-second-step": {
      "filePath": "campaing-second-step.tsx"
    },
    "/campaing-third-step": {
      "filePath": "campaing-third-step.tsx"
    },
    "/explore": {
      "filePath": "explore.tsx"
    },
    "/explore-map": {
      "filePath": "explore-map.tsx"
    },
    "/expolore-map": {
      "filePath": "expolore-map.tsx"
    },
    "/favorites": {
      "filePath": "favorites.tsx"
    },
    "/history": {
      "filePath": "history.tsx"
    },
    "/my-campaigns": {
      "filePath": "my-campaigns.tsx"
    },
    "/profile-settings": {
      "filePath": "profile-settings.tsx"
    },
    "/profileNotifications": {
      "filePath": "profileNotifications.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
